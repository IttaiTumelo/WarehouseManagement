@page "/OrderFulfillment"
@inject NavigationManager NavigationManager
<h3>Order Fulfillment</h3>
<div class="row">
    <div class="col-7">
        <h4>Product Finder</h4>
        <table class="table table-dark table-hover">
            <thead>
            <tr>
                <th>Customer Name</th>
                <th>Orders</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var order in LocalDb.CurrentCustomerOrder)
            {
                <tr>
                    <td>@order.Name</td>
                    <td>
                        <table>
                            <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Quantity</th>
                                <th>TotalPrice</th>
                            </tr>
                            
                            </thead>
                            <tbody>
                            @foreach (var item in order.Products)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.TotalPrice</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </td>
                    <td>
                        <button class="btn btn-success" @onclick="()=>UpdateStock(order)">Fulfill</button>
                        <button class="btn btn-danger" @onclick="()=>RemoveOrder(order)">Cancel</button>
                    </td>
                </tr>
                
            }
        
            </tbody>
        </table>
    </div>
    <div class="col-5 pt-4">
        <div class="input-group mb-3">
          <input type="text" class="form-control" placeholder="Barcode" aria-label="Recipient's username" aria-describedby="button-addon2">
          <button class="btn btn-outline-secondary" type="button" id="button-addon2">Enter</button>
        </div>
    </div>
</div>
<h3>Stock</h3>

      <table class="table table-dark table-hover">
            <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Quantity</th>
                <th>Product Barcode</th>
                <th>Product Location</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Quantity</td>
                    <td>@product.Barcode</td>
                    <td>@product.Location</td>
                </tr>
            }
        
            </tbody>
        </table>


@code {
    
    List<Product> products = LocalDb.AvailableProducts;
    
    private void UpdateStock(CustomerOrder order)
    {
        LocalDb.CurrentShipments.Add(new()
        {
            Id = LocalDb.CurrentShipments.Count()+1,
            CustomerName = order.Name,
            ShipmentItemsList = new(order.Products.Count)
        });
        order.Products.ForEach((product) => { LocalDb.CurrentShipments.First(x=>x.Id ==LocalDb.CurrentShipments.Count()).ShipmentItemsList.Add((Product)product.Clone());});
    //remove products in order from available products in DB
        foreach (var product in order.Products)
        {
            LocalDb.AvailableProducts.FirstOrDefault(x => x.Id == product.Id).Quantity -= product.Quantity;
            products = LocalDb.AvailableProducts;
            LocalDb.CurrentCustomerOrder.Remove(order);
            StateHasChanged();
        }
        // LocalDb.AvailableProducts.RemoveRange(order);
    }

    private void RemoveOrder(CustomerOrder order)
    {
        // LocalDb.CurrentCutommerOrder.Remove(order);
    }

}