@page "/Receiving"
@using System.Data
@using System.Security.Cryptography.X509Certificates

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content  bg-dark">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Order Details</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
        <div class="modal-body text-white">
            @* order details for _order *@
            <div class="row">
                <div class="col-6">
                    <div class="row">
                        <div class="col-6">
                            <p>Order Id</p>
                        </div>
                        <div class="col-6">
                            <p>@_order?.Id</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <p>Order Name</p>
                        </div>
                        <div class="col-6">
                            <p>@_order?.Name</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <p>Total Amount</p>
                        </div>
                        <div class="col-6">
                            <p>@_order?.TotalAmount</p>
                        </div>
                    </div>
                </div>
                <div class="col-6">
                    <table class="table table-dark table-hover">
                        <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Code</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Price</th>
                        </tr>
                        </thead>
                        <tbody>

                        @foreach (var item in _order?.Products)
                        {
                            <tr>
                                <th scope="row">@item.Id</th>
                                <td>@item.Name</td>
                                <td>@item.Quantity</td>
                                <td>@item.TotalPrice</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    <div class="form-floating  bg-dark">
                      <select class="form-select  bg-dark text-white" id="floatingSelect" aria-label="Floating label select example">
                        <option selected>Open this select menu</option>
                        <option value="1">One</option>
                        <option value="2">Two</option>
                        <option value="3">Three</option>
                      </select>
                      <label for="floatingSelect">Works with selects</label>
                    </div>
                </div>
                </div>
        </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="Reject">Reject</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="Receive">Receive</button>
      </div>
    </div>
  </div>
</div>


<h3>Receiving</h3>


<div class="input-group mb-3">
    <span class="input-group-text">Barcode code</span>
    <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)">
    <span class="input-group-text">.00</span>
    <button class="btn btn-outline-secondary" type="button" id="button-addon2">Button</button>
</div>

<div class="row">
    <div class="col-6">
<h3>Incoming</h3>
        
<table class="table table-dark table-hover">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">items list</th>
      <th scope="col">total amount</th>
      @* <th scope="col">status</th> *@
    </tr>
  </thead>
  <tbody>
    @foreach (var item in OurOrders)
    {
        <tr data-bs-toggle="modal" data-bs-target="#exampleModal">
            <th scope="row">@item.Id</th>
            <td>@item.Name</td>
            @* <td>@item</td> *@
            <td>
                <table>
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Code</th>
                        <th scope="col">vendor name</th>
                        <th scope="col">items list</th>
                        <th scope="col">total amount</th>
                        <th scope="col">status</th>
                    </tr>
                    </thead>
                </table>
                <tbody>
                @foreach (var i in item.Products)
                {
                    <tr>
                        <td>@i.Id</td>
                        <td>@i.Name</td>
                        <td>@i.Location</td>
                        <td>@i.Quantity</td>
                        <td>@i.UnitPrice</td>
                    </tr>
                }
                </tbody>
                
            </td>
            <td>@item.TotalAmount</td>
            @* <td>@item.Status</td> *@
        </tr>
    }
  </tbody>
</table>

    </div>
    
    <div class="col-6">
<h3>Expected</h3>
<table class="table table-dark table-hover">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">items list</th>
      <th scope="col">total amount</th>
      @* <th scope="col">status</th> *@
    </tr>
  </thead>
  <tbody>
    @foreach (var item in LocalDb.OurOrders)
    {
        <tr data-bs-toggle="modal" data-bs-target="#exampleModal">
            <th scope="row">@item.Id</th>
            <td>@item.Name</td>
            @* <td>@item</td> *@
            <td>
                <table>
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Code</th>
                        <th scope="col">vendor name</th>
                        <th scope="col">items list</th>
                        <th scope="col">total amount</th>
                        <th scope="col">status</th>
                    </tr>
                    </thead>
                </table>
                <tbody>
                @foreach (var i in item.Products)
                {
                    <tr>
                        <td>@i.Id</td>
                        <td>@i.Name</td>
                        <td>@i.Location</td>
                        <td>@i.Quantity</td>
                        <td>@i.UnitPrice</td>
                    </tr>
                }
                </tbody>
                
            </td>
            <td>@item.TotalAmount</td>
            @* <td>@item.Status</td> *@
        </tr>
    }
  </tbody>
</table>


    </div>
</div>

<h3>Received</h3>
@* a full width list of received items *@
<table class="table table-dark table-hover">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">items list</th>
      <th scope="col">total amount</th>
      @* <th scope="col">status</th> *@
    </tr>
  </thead>
  <tbody>
    @foreach (var item in ReceivedOrders)
    {
        <tr>
            <th scope="row">@item.Id</th>
            <td>@item.Name</td>
            @* <td>@item</td> *@
            <td>
                <table>
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Code</th>
                        <th scope="col">vendor name</th>
                        <th scope="col">items list</th>
                        <th scope="col">total amount</th>
                        <th scope="col">status</th>
                    </tr>
                    </thead>
                </table>
                <tbody>
                @foreach (var i in item.Products)
                {
                    <tr>
                        <td>@i.Id</td>
                        <td>@i.Name</td>
                        <td>@i.Location</td>
                        <td>@i.Quantity</td>
                        <td>@i.UnitPrice</td>
                    </tr>
                }
                </tbody>
                
            </td>
            <td>@item.TotalAmount</td>
            @* <td>@item.Status</td> *@
        </tr>
    }
  </tbody>
</table>

<h3>Stocking</h3>
        <table class="table table-dark table-hover">
            <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Quantity</th>
                <th>Product Barcode</th>
                <th>Product Location</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var product in AvailableProducts)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Quantity</td>
                    <td>@product.Barcode</td>
                    <td>@product.Location</td>
                </tr>
            }
        
            </tbody>
        </table>
@code {
    List<OurOrder> OurOrders = LocalDb.OurOrders;
    List<OurOrder> ReceivedOrders = LocalDb.ReceivedOrders;
    List<OurOrder> RejectedOrders = LocalDb.RejectedOrders;
    List<Product> AvailableProducts = LocalDb.AvailableProducts;
    
    OurOrder _order = new();
    protected override void OnInitialized()
    {
        _order = LocalDb.OurOrders.FirstOrDefault()?? new OurOrder();
        
        // LocalDb.OurOrders.ForEach(ourOrder=> OurOrders.Add((OurOrder)ourOrder.Clone()));
    }
    
    void Receive()
    {
        Console.WriteLine("Receive");
        LocalDb.ReceivedOrders.Add((OurOrder)_order.Clone());
        LocalDb.OurOrders.Remove( LocalDb.OurOrders.First(x=> x.Id == _order.Id));
        _order.Products.ForEach(
            product =>
            {
                LocalDb.AvailableProducts.First(x=>x.Name.Equals(product.Name)).Quantity += product.Quantity;
            });
        OurOrders = LocalDb.OurOrders;
        ReceivedOrders = LocalDb.ReceivedOrders;
        RejectedOrders = LocalDb.RejectedOrders;
        AvailableProducts = LocalDb.AvailableProducts;
        StateHasChanged();
    }

    void Reject()
    {
        LocalDb.OurOrders.Remove(LocalDb.OurOrders.First(x => x.Id == _order.Id));
        LocalDb.RejectedOrders.Add((OurOrder)_order.Clone());
        OurOrders = LocalDb.OurOrders;
        ReceivedOrders = LocalDb.ReceivedOrders;
        RejectedOrders = LocalDb.RejectedOrders;
        AvailableProducts = LocalDb.AvailableProducts;
        StateHasChanged();
    }
}